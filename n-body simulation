echo "# SES230Final_Hartmann" >> README.md
  git init
  git add README.md
  git commit -m "first commit"
  git branch -M main
  git remote add origin https://github.com/mphartma/SES230Final_Hartmann.git
  git push -u origin main

import numpy as np
import matplotlib.pyplot as plt

class Particle:
    def __init__(self, mass, position, velocity):
        self.mass = mass
        self.position = position.astype(float)
        self.velocity = velocity.astype(float)

def gravitational_force(particle1, particle2, G = 2):
    r = particle2.position - particle1.position
    r_magnitude = np.linalg.norm(r)
    force_magnitude = G * particle1.mass * particle2.mass / r_magnitude**2
    force = force_magnitude * r / r_magnitude
    return force

def update_positions_velocities(particles, dt=0.01, G = 2):
    for i in range(len(particles)):
        for j in range(i+1, len(particles)):
            force = gravitational_force(particles[i], particles[j], G)
            particles[i].velocity += force / particles[i].mass * dt
            particles[j].velocity -= force / particles[j].mass * dt

    for particle in particles:
        particle.position += particle.velocity * dt

#two-body orbit
particle1 = Particle(mass=2, position=np.array([-1, 0]), velocity=np.array([0, 1]))
particle2 = Particle(mass=2, position=np.array([1, 0]), velocity=np.array([0, -1]))

particles_two_body = [particle1, particle2]
positions_two_body = []

for _ in range(1000):
    positions_two_body.append([particle.position.copy() for particle in particles_two_body])
    update_positions_velocities(particles_two_body)

positions_two_body = np.array(positions_two_body)

#three-body orbit
particle1 = Particle(mass=1, position=np.array([-3, 0]), velocity=np.array([0, 1]))
particle2 = Particle(mass=1, position=np.array([3, 0]), velocity=np.array([0, -1]))
particle3 = Particle(mass=1, position=np.array([0, 3]), velocity=np.array([1, 0]))

particles_three_body = [particle1, particle2, particle3]
positions_three_body = []

for _ in range(1000):
    positions_three_body.append([particle.position.copy() for particle in particles_three_body])
    update_positions_velocities(particles_three_body)

positions_three_body = np.array(positions_three_body)

plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
for i in range(len(particles_two_body)):
    plt.plot(positions_two_body[:, i, 0], positions_two_body[:, i, 1], label=f'Particle {i + 1}')
plt.title('Two-Body Orbit')
plt.xlabel('X Position')
plt.ylabel('Y Position')
plt.legend()

plt.subplot(1, 2, 2)
for i in range(len(particles_three_body)):
    plt.plot(positions_three_body[:, i, 0], positions_three_body[:, i, 1], label=f'Particle {i + 1}')
plt.title('Three-Body Orbit')
plt.xlabel('X Position')
plt.ylabel('Y Position')
plt.legend()

plt.tight_layout()
plt.show()
